language: cpp
compiler:
  - gcc
  - clang

env:
  global:
    - GCC_VERSION=4.8

  matrix:
    - CONFIG=Debug COVERAGE=0
    - CONFIG=Debug COVERAGE=1 DOC=1
    - CONFIG=Release COVERAGE=0

matrix:
  exclude:
    - compiler: gcc
      env: CONFIG=Debug COVERAGE=0

notifications:
  email:
    recipients:
      - estermann.michel@gmail.com
    on_success: change
    on_failure: always


before_install:
  - if [ "$CXX" == "g++" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
  - sudo apt-get -qq update
  - if [ "$CXX" == "g++" ]; then sudo apt-get -y -qq install g++-${GCC_VERSION} gcc-${GCC_VERSION} ; fi
  - if [ "$CXX" == "g++" ]; then sudo ln -s -v -f $(which g++-${GCC_VERSION}) /usr/bin/g++; fi
  - if [ "$CXX" == "g++" ]; then sudo ln -s -v -f $(which gcc-${GCC_VERSION}) /usr/bin/gcc; fi

install:
  - wget --no-check-certificate https://www.cmake.org/files/v3.2/cmake-3.2.3-Linux-x86_64.tar.gz
  - tar -zxvf cmake-3.2.3-Linux-x86_64.tar.gz
  - sudo cp -fR cmake-3.2.3-Linux-x86_64/* /usr
  - rm -rf cmake-3.2.3-Linux-x86_64
  - rm cmake-3.2.3-Linux-x86_64.tar.gz
  - sudo apt-get -y -qq install libboost-date-time1.48-dev libboost-thread1.48-dev libboost-chrono1.48-dev libboost-regex1.48-dev libboost-system1.48-dev libboost-filesystem1.48-dev libboost-program-options1.48-dev

  - gem install cucumber
  - if [ "${COVERAGE}" == '1' ] ; then sudo pip install cpp-coveralls; fi
  - if [ "${DOC}" == '1' ] ; then sudo apt-get -y -qq install doxygen graphviz; fi

before_script:
  - mkdir build && (cd build && ../cmake -DCMAKE_BUILD_TYPE=$CONFIG ..)
  - ./cmake --build build --target external_dependencies --config $CONFIG

script:
  - ./cmake --build build --target all --config $CONFIG
  - ./cmake --build build --target run_feature_test --config $CONFIG
  - ./cmake --build build --target Cpp_project_template --config $CONFIG
  - if [ "${COVERAGE}" == '1' ] ; then ./cmake --build build --target coverage --config $CONFIG ; fi
  - if [ "${DOC}" == '1' ] ; then ./cmake --build build --target doc ; fi

after_success:
  - if [ "${COVERAGE}" = '1' ] ; then coveralls -E.*/externals/.* -E/usr/include/.* -E.*/tests/.* -E.*/CMakeFiles/.* ; fi
