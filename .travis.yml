language: cpp

sudo: false

matrix:
  include:

    # Linux Clang Builds
    - os: linux
      compiler: clang
      addons: &clang35
        apt:
          sources:
            - llvm-toolchain-precise-3.5
            - ubuntu-toolchain-r-test
            - boost-latest
          packages:
            - clang-3.5
            - libboost-date-time1.55-dev
            - libboost-thread1.55-dev
            - libboost-chrono1.55-dev
            - libboost-regex1.55-dev
            - libboost-system1.55-dev
            - libboost-filesystem1.55-dev
            - libboost-program-options1.55-dev
      env: COMPILER=clang++-3.5 BUILD_TYPE='Release' COVERAGE=0

    - os: linux
      compiler: clang
      addons: *clang35
      env: COMPILER=clang++-3.5 BUILD_TYPE='Debug' COVERAGE=0

    - os: linux
      compiler: clang
      addons: &clang36
        apt:
          sources:
            - llvm-toolchain-precise-3.6
            - ubuntu-toolchain-r-test
            - boost-latest
          packages:
            - clang-3.6
            - libboost-date-time1.55-dev
            - libboost-thread1.55-dev
            - libboost-chrono1.55-dev
            - libboost-regex1.55-dev
            - libboost-system1.55-dev
            - libboost-filesystem1.55-dev
            - libboost-program-options1.55-dev
      env: COMPILER=clang++-3.6 BUILD_TYPE='Release' COVERAGE=0

    - os: linux
      compiler: clang
      addons: *clang36
      env: COMPILER=clang++-3.6 BUILD_TYPE='Debug' COVERAGE=0

    - os: linux
      compiler: clang
      addons: &clang37
        apt:
          sources:
            - llvm-toolchain-precise-3.7
            - ubuntu-toolchain-r-test
            - boost-latest
          packages:
            - clang-3.7
            - libboost-date-time1.55-dev
            - libboost-thread1.55-dev
            - libboost-chrono1.55-dev
            - libboost-regex1.55-dev
            - libboost-system1.55-dev
            - libboost-filesystem1.55-dev
            - libboost-program-options1.55-dev
      env: COMPILER=clang++-3.7 BUILD_TYPE='Release' COVERAGE=0

    - os: linux
      compiler: clang
      addons: *clang37
      env: COMPILER=clang++-3.7 BUILD_TYPE='Debug' COVERAGE=0

    # Linux GCC Builds
    - os: linux
      compiler: gcc
      addons: &gcc48
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - boost-latest
          packages:
            - g++-4.8
            - libboost-date-time1.55-dev
            - libboost-thread1.55-dev
            - libboost-chrono1.55-dev
            - libboost-regex1.55-dev
            - libboost-system1.55-dev
            - libboost-filesystem1.55-dev
            - libboost-program-options1.55-dev
      env: COMPILER=g++-4.8 BUILD_TYPE='Release' COVERAGE=0

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - boost-latest
          packages:
            - g++-4.8
            - libboost-date-time1.55-dev
            - libboost-thread1.55-dev
            - libboost-chrono1.55-dev
            - libboost-regex1.55-dev
            - libboost-system1.55-dev
            - libboost-filesystem1.55-dev
            - libboost-program-options1.55-dev
            - doxygen
            - graphviz
      env: COMPILER=g++-4.8 BUILD_TYPE='Debug' COVERAGE=1 GCOV_VER='gcov-4.8' DOC=1

    - os: linux
      compiler: gcc
      addons: &gcc49
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - boost-latest
          packages:
            - g++-4.9
            - libboost-date-time1.55-dev
            - libboost-thread1.55-dev
            - libboost-chrono1.55-dev
            - libboost-regex1.55-dev
            - libboost-system1.55-dev
            - libboost-filesystem1.55-dev
            - libboost-program-options1.55-dev
      env: COMPILER=g++-4.9 BUILD_TYPE='Release' COVERAGE=0

    - os: linux
      compiler: gcc
      addons: *gcc49
      env: COMPILER=g++-4.9 BUILD_TYPE='Debug' COVERAGE=0

    - os: linux
      compiler: gcc
      addons: &gcc5
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - boost-latest
          packages:
            - g++-5
            - libboost-date-time1.55-dev
            - libboost-thread1.55-dev
            - libboost-chrono1.55-dev
            - libboost-regex1.55-dev
            - libboost-system1.55-dev
            - libboost-filesystem1.55-dev
            - libboost-program-options1.55-dev
      env: COMPILER=g++-5 BUILD_TYPE='Release' COVERAGE=0

    - os: linux
      compiler: gcc
      addons: *gcc5
      env: COMPILER=g++-5 BUILD_TYPE='Debug' COVERAGE=0
  allow_failures:
    - os: linux
      compiler: clang
      addons: &clang38
        apt:
          sources:
            - llvm-toolchain-precise
            - ubuntu-toolchain-r-test
            - boost-latest
          packages:
            - clang-3.8
            - libboost-date-time1.55-dev
            - libboost-thread1.55-dev
            - libboost-chrono1.55-dev
            - libboost-regex1.55-dev
            - libboost-system1.55-dev
            - libboost-filesystem1.55-dev
            - libboost-program-options1.55-dev
      env: COMPILER=clang++-3.8 BUILD_TYPE='Release' COVERAGE=0

    - os: linux
      compiler: clang
      addons: *clang38
      env: COMPILER=clang++-3.8 BUILD_TYPE='Debug' COVERAGE=0    

notifications:
  email:
    recipients:
      - estermann.michel@gmail.com
    on_success: change
    on_failure: always

install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR} && mkdir cmake
  - |
    CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
    travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
    export PATH=${DEPS_DIR}/cmake/bin:${PATH}
  - gem install bundler
  - if [ "${COVERAGE}" == '1' ] ; then export PATH=$HOME/.local/bin:$PATH && pip install cpp-coveralls --user `whoami` ; fi

before_script:
  - export CXX=${COMPILER}
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build && (cd build && cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} ..)
  - cmake --build build --target external_dependencies --config ${BUILD_TYPE}

script:
  - cmake --build build --target all --config ${BUILD_TYPE}
  - cmake --build build --target run_feature_test --config ${BUILD_TYPE}
  - cmake --build build --target Cpp_project_template --config ${BUILD_TYPE}
  - if [ "${COVERAGE}" == '1' ] ; then cmake --build build --target coverage --config ${BUILD_TYPE} ; fi
  - if [ "${DOC}" == '1' ] ; then cmake --build build --target doc ; fi

after_success:
  - if [ "${COVERAGE}" = '1' ] ; then coveralls -E.*/externals/.* -E/usr/include/.* -E.*/tests/.* -E.*/CMakeFiles/.* --gcov ${GCOV_VER} ; fi
