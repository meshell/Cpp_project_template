language: cpp
compiler:
  - gcc

env:
  global:
    - GCC_VERSION=4.8

  matrix:
    - CONFIG=Debug COVERAGE=0 
    - CONFIG=Debug COVERAGE=1 DOC=1
    - CONFIG=Release COVERAGE=0

matrix:
  exclude:
    - compiler: gcc
      env: CONFIG=Debug COVERAGE=0  

notifications:
  email:
    recipients:
      - estermann.michel@gmail.com
    on_success: change
    on_failure: always


before_install:
  - if test ${CC} = gcc ; then sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test ; fi
  - wget http://www.cmake.org/files/v3.2/cmake-3.2.3-Linux-x86_64.tar.gz
  - tar -zxvf cmake-3.2.3-Linux-x86_64.tar.gz
  - ln -s cmake-3.2.3-Linux-x86_64/bin/cmake cmake-3 
  - sudo apt-get -qq update 

install:
  - sudo apt-get -y -qq libboost-date-time-dev libboost-thread-dev libboost-chrono-dev libboost-regex-dev libboost-system-dev libboost-filesystem-dev libboost-program-options-dev
  - if test ${CC} = gcc ; then sudo apt-get -y -qq install g++-${GCC_VERSION} ; fi
  - if test ${CC} = gcc ; then sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 40 --slave /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} --slave /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} ; fi
  - if test ${CC} = gcc ; then sudo update-alternatives --set gcc /usr/bin/gcc-${GCC_VERSION} ; fi
  - gem install cucumber
  - if [ "${COVERAGE}" = '1' ] ; then sudo pip install cpp-coveralls --use-mirrors; fi
  - if [ "${DOC}" = '1' ] ; then sudo apt-get -y -qq install doxygen graphviz; fi

before_script:
  - mkdir build && (cd build && ../cmake-3 -DCMAKE_BUILD_TYPE=$CONFIG ..) 
  - ./cmake-3 --build build --target external_dependencies --config $CONFIG

script:
  - ./cmake-3 --build build --target all --config $CONFIG
  - ./cmake-3 --build build --target run_feature_test --config $CONFIG
  - ./cmake-3 --build build --target Cpp_project_template --config $CONFIG
  - if [ "${COVERAGE}" = '1' ] ; then ./cmake-3 --build build --target coverage --config $CONFIG ; fi 
  - if [ "${DOC}" = '1' ] ; then ./cmake-3 --build build --target doc ; fi

after_success:
  - if [ "${COVERAGE}" = '1' ] ; then coveralls -E.*/externals/.* -E/usr/include/.* -E.*/tests/.* -E.*/CMakeFiles/.* ; fi
